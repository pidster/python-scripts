#!/usr/bin/env python
#
# Copyright 2013 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

import sys
import tweepy
from os import path, access, R_OK

home = path.expanduser('~')

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Properties file in user home directory '.twitter-api.properties'
# Contains Twitter API credentials for the user running the script
# 
# consumer.key=AAAAAAAAAAAAAAAA
# consumer.secret=AAAAAAAAAAAAAAAA
# access.key=AAAAAAAAAAAAAAAA
# access.secret=AAAAAAAAAAAAAAA
# 
propertiesFile = home + '/.twitter-api.properties'
config = {}

if path.isfile(propertiesFile) and access(propertiesFile, R_OK):
    try:
        with open(propertiesFile) as file:
            for line in file:
                (key, val) = line.split('=')
                config[key] = val.replace('\n', '')
    except IOError as ioe:
        print ioe.args
        sys.exit(1)
else:
    print 'Missing or unreadable properties at: ' + propertiesFile
    sys.exit(1)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Check for input as an argument or via STDIN
#

user = ''
message = ''

try:
    user = sys.argv[1]
    message = sys.argv[2]

except IndexError:
    line = raw_input()
    pair = line.split(' ', 1)
    user = pair[1]
    message = pair[2]


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Use the tweepy package to update twitter status with 'message'
# 
try:
    auth = tweepy.OAuthHandler(config['consumer.key'], config['consumer.secret'])
    auth.set_access_token(config['access.key'], config['access.secret'])
    api = tweepy.API(auth)
    api.send_direct_message(screen_name=user, text=message)
    sys.exit(0)

except tweepy.error.TweepError as err:
    print err.args[0]
    sys.exit(1)
